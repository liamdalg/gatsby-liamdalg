{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","inverted","siteTitle","navLinks","react_default","className","style","margin","padding","gatsby_browser_entry","to","map","_ref2","name","link","key","activeClassName","library","add","faGithub","faLinkedin","faTwitter","config","autoAddCss","Layout","invertedHeader","Fragment","components_header","site","siteMetadata","social","href","react_fontawesome_index_es","width","icon","_1196550220","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-503d920608e87f69f084.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport '../styles/header.scss';\n\nconst Header = ({ inverted, siteTitle, navLinks }) => (\n  <header className=\"main-header\">\n    <div\n      className=\"nav-container\"\n      style={{\n        margin: `0 auto`,\n        padding: `2rem 0rem`,\n      }}\n    >\n      <nav className=\"navbar\">\n        <ul className=\"nav-left\">\n          <li>\n            <Link\n              to=\"/\"\n              className={inverted ? 'main-link inverted' : 'main-link'}\n            >\n              {siteTitle}\n            </Link>\n          </li>\n        </ul>\n        <ul className=\"nav-right\">\n          {navLinks.map(({ name, link }) => (\n            <li key={`navbar-link-${name}`}>\n              <Link\n                to={link}\n                activeClassName=\"nav-active\"\n                className={\n                  inverted\n                    ? 'nav-link main-link inverted'\n                    : 'nav-link main-link'\n                }\n              >\n                {name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport '../styles/layout.scss';\n\nimport { library, config } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faGithub,\n  faLinkedin,\n  faTwitter,\n} from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nlibrary.add(faGithub);\nlibrary.add(faLinkedin);\nlibrary.add(faTwitter);\nconfig.autoAddCss = false;\n\nconst Layout = ({ invertedHeader, children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            navLinks {\n              name\n              link\n            }\n            social {\n              name\n              link\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header\n          inverted={invertedHeader}\n          siteTitle={data.site.siteMetadata.title}\n          navLinks={data.site.siteMetadata.navLinks}\n        />\n        <div>\n          <main>{children}</main>\n          <footer>\n            <div className=\"footer-wrapper\">\n              <div className=\"media-icons-wrapper\">\n                {data.site.siteMetadata.social.map(({ name, link }) => (\n                  <a\n                    className=\"media-icon\"\n                    key={`media-icon-${name}`}\n                    href={link}\n                  >\n                    <FontAwesomeIcon width={48} icon={['fab', name]} />\n                  </a>\n                ))}\n              </div>\n              <div className=\"footer-other\">\n                <p>liamdalg99@gmail.com</p>\n                <p>\n                  © 2019 Liam Dalgarno | Made with GatsbyJS and Github Pages.\n                </p>\n              </div>\n            </div>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n);\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}